let
    ErrorBase = Extension.ImportModule("ErrorBase.pqm"),
    ErrorLog = Extension.ImportFunction("ErrorLog", "Logger.pqm"),

    RequestErrors.NotParsableResponse = (detail as anynonnull) =>
        ErrorBase("Not Parsable Response", "SPS returned response with missing fields", detail),
    RequestErrors.BadRequest = (detail as record) =>
        ErrorBase("Bad Request", "SPS interpreted a malformed request", detail),
    RequestErrors.AuthenticationError = (detail as record) =>
        ErrorBase("Authentication Error", "The username or password is invalid", detail),
    RequestErrors.AuthorizationError = (detail as record) =>
        ErrorBase("Authorization Error", "You are not authorized to access the given resource", detail),
    RequestErrors.NotFound = (detail as record) =>
        ErrorBase("Not Found", "The requested resource cannot be found", detail),
    RequestErrors.SnapshotQuotaError = (detail as record) =>
        ErrorBase("Snapshot Quota Error", "Snapshot quota exceeded", detail),
    RequestErrors.GeneralError = (detail as record) =>
        ErrorBase("General Error", "SPS responded with server error", detail),
    RequestErrors.ErrorMap = [
        400 = RequestErrors.BadRequest,
        401 = RequestErrors.AuthenticationError,
        403 = RequestErrors.AuthorizationError,
        404 = RequestErrors.NotFound,
        429 = RequestErrors.SnapshotQuotaError,
        500 = RequestErrors.GeneralError
    ]
in
    [
        ErrorCodes = List.Transform(Record.FieldNames(RequestErrors.ErrorMap), each Number.FromText(_)),
        ErrorMap = RequestErrors.ErrorMap,
        NotParsableResponse = RequestErrors.NotParsableResponse
    ]
