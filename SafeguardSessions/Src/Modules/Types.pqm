let
    SafeguardSessions.ContentsType = type function (
        url as (
            type text meta [
                Documentation.FieldCaption = "Source IP",
                Documentation.FieldDescription = "The source IP address identifies the appliance from which you will fetch session data.",
                Documentation.SampleValues = {"10.12.230.21"}
            ]
        ),
        from as (
            type nullable datetimezone meta [
                Documentation.FieldCaption = "From",
                Documentation.FieldDescription = "This field allows you to specify the starting search date.",
                Documentation.SampleValues = {
                    "YYYY.MM.DD",
                    "MM/DD/YYYY",
                    "YYYY.MM.DD HH:MM:SS (XM)",
                    "MM/DD/YYYY HH:MM:SS (XM)",
                    "YYYY.MM.DD HH:MM:SS (XM) Z",
                    "MM/DD/YYYY HH:MM:SS (XM) Z",
                    "ISO 8061 Date",
                    "ISO 8061 Date and time in UTC"
                },
                DataSource.Path = false
            ]
        ),
        to as (
            type nullable datetimezone meta [
                Documentation.FieldCaption = "To",
                Documentation.FieldDescription = "This field allows you to specify the closing search date.",
                Documentation.SampleValues = {
                    "YYYY.MM.DD",
                    "MM/DD/YYYY",
                    "YYYY.MM.DD HH:MM:SS (XM)",
                    "MM/DD/YYYY HH:MM:SS (XM)",
                    "YYYY.MM.DD HH:MM:SS (XM) Z",
                    "MM/DD/YYYY HH:MM:SS (XM) Z",
                    "ISO 8061 Date",
                    "ISO 8061 Date and time in UTC"
                },
                DataSource.Path = false
            ]
        ),
        filterField1 as (
            type nullable text meta [
                Documentation.FieldCaption = "Filter field 1",
                Documentation.FieldDescription = "This field allows you to specify a search field for sessions. Specify its value in Filter value 1.",
                Documentation.SampleValues = {"protocol"},
                DataSource.Path = false
            ]
        ),
        filterValue1 as (
            type nullable text meta [
                Documentation.FieldCaption = "Filter value 1",
                Documentation.FieldDescription = "This field allows you to specify a search value for sessions. Specifies the value of Filter field 1.",
                Documentation.SampleValues = {"SSH"},
                DataSource.Path = false
            ]
        ),
        filterField2 as (
            type nullable text meta [
                Documentation.FieldCaption = "Filter field 2",
                Documentation.FieldDescription = "This field allows you to specify a search field for sessions. Specify its value in Filter value 2.",
                Documentation.SampleValues = {"verdict"},
                DataSource.Path = false
            ]
        ),
        filterValue2 as (
            type nullable text meta [
                Documentation.FieldCaption = "Filter value 2",
                Documentation.FieldDescription = "This field allows you to specify a search value for sessions. Specifies the value of Filter field 2.",
                Documentation.SampleValues = {"ACCEPT"},
                DataSource.Path = false
            ]
        ),
        filterField3 as (
            type nullable text meta [
                Documentation.FieldCaption = "Filter field 3",
                Documentation.FieldDescription = "This field allows you to specify a search field for sessions. Specify its value in Filter value 3.",
                Documentation.SampleValues = {"active"},
                DataSource.Path = false
            ]
        ),
        filterValue3 as (
            type nullable text meta [
                Documentation.FieldCaption = "Filter value 3",
                Documentation.FieldDescription = "This field allows you to specify a search value for sessions. Specifies the value of Filter field 3.",
                Documentation.SampleValues = {"false"},
                DataSource.Path = false
            ]
        ),
        skipVersionCheck as (
            type nullable logical meta [
                Documentation.FieldCaption = "Skip Version Check",
                Documentation.FieldDescription = "This field allows you to skip the SPS version check.",
                Documentation.AllowedValues = {false, true},
                DataSource.Path = false
            ]
        )
    ) as record meta [
        Documentation.Name = "One Identity Safeguard Power BI Connector",
        Documentation.LongDescription = "Enter the required parameters to fetch data from SPS. 
        Use the optional input fields (From, To, Filter field, Filter value) to query sessions from the specified source IP based on the search criteria 
        you specify. The Filter field - Filter value pairs are concatenated with ""AND"" in the q query parameter. 
        If only the Filter field is specified in the matching filter field-value pair, you will get an error indicating that a value has not been specified 
        for the filter field. For the From and To search fields, if only one of them is specified, the search in the other direction remains open."
    ]
in
    [
        ContentsType = SafeguardSessions.ContentsType
    ]
