let
    BaseAuthentication.EncodeCredentials = (username as text, password as text) as text =>
        let
            combinedCredentials = Text.Combine({username, ":", password}),
            encodedCredentials = Binary.ToText(Text.ToBinary(combinedCredentials), BinaryEncoding.Base64)
        in
            encodedCredentials,
    BaseAuthentication.MineSessionIdFromCookie = (cookieHeader as text) as text =>
        let
            // The M language handles fields in the Cookie header as a string by concatenating them with a comma. If
            // you would like tu use the "raw" extracted cookie header in a request, M will split the header string by
            // semicolons and each item in the newly generated list will be a cookie field, so the session_id will not
            // be recognized. Therefore we need to extract the seassion_id from the cookie header. To be sure, we should
            // also consider the case where the field containing session_id is the 2nd field in the cookie. Since the
            // cookie fields are connected by commas, you should also perform a split based on this. And you may also want
            // to remove the whitespaces following and ending session_id.
            cookieHeaderSplitBySemicolon = Text.Split(cookieHeader, ";"),
            sessionIdWithPossibleExtraText = Text.Combine(List.FindText(cookieHeaderSplitBySemicolon, "session_id")),
            sessionIdSplitByComma = Text.Split(sessionIdWithPossibleExtraText, ","),
            sessionIdwithPossibleWhiteSpaces = Text.Combine(List.FindText(sessionIdSplitByComma, "session_id")),
            sessionId = Text.Trim(sessionIdwithPossibleWhiteSpaces)
        in
            sessionId
in
    [
        EncodeCredentials = BaseAuthentication.EncodeCredentials,
        MineSessionIdFromCookie = BaseAuthentication.MineSessionIdFromCookie
    ]
